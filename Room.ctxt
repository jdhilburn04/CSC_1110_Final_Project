#BlueJ class context
comment0.target=Room
comment0.text=\r\n\ Class\ Room\ -\ a\ room\ in\ an\ adventure\ game.\r\n\r\n\ This\ class\ is\ part\ of\ the\ "World\ of\ Zuul"\ application.\ \r\n\ "World\ of\ Zuul"\ is\ a\ very\ simple,\ text\ based\ adventure\ game.\ \ \r\n\r\n\ A\ "Room"\ represents\ one\ location\ in\ the\ scenery\ of\ the\ game.\ \ It\ is\ \r\n\ connected\ to\ other\ rooms\ via\ exits.\ \ The\ exits\ are\ labelled\ north,\ \r\n\ east,\ south,\ west.\ \ For\ each\ direction,\ the\ room\ stores\ a\ reference\r\n\ to\ the\ neighboring\ room,\ or\ null\ if\ there\ is\ no\ exit\ in\ that\ direction.\r\n\ \r\n\ @author\ \ Michael\ K\u00F6lling\ and\ David\ J.\ Barnes\r\n\ @version\ 2016.02.29\r\n
comment1.params=description
comment1.target=Room(java.lang.String)
comment1.text=\r\n\ Create\ a\ room\ described\ "description".\ Initially,\ it\ has\r\n\ no\ exits.\ "description"\ is\ something\ like\ "a\ kitchen"\ or\r\n\ "an\ open\ court\ yard".\r\n\ @param\ description\ The\ room's\ description.\r\n
comment10.params=it
comment10.target=void\ addItem(Item)
comment11.params=direction\ neighbor
comment11.target=void\ setExits(java.lang.String,\ Room)
comment11.text=\r\n\ Define\ the\ exits\ of\ this\ room.\ \ Every\ direction\ either\ leads\r\n\ to\ another\ room\ or\ is\ null\ (no\ exit\ there).\r\n\ @param\ direction\r\n\ @param\ neighbor\r\n
comment12.params=
comment12.target=java.lang.String\ getShortDescription()
comment13.params=
comment13.target=java.lang.String\ getLongDescription()
comment14.params=
comment14.target=java.lang.String\ getImage()
comment14.text=\r\n\ @return\ a\ String,\ which\ hopefully\ contains\ the\ file\ name\r\n\ of\ an\ Image\ file.\r\n
comment15.params=filename
comment15.target=void\ setImage(java.lang.String)
comment15.text=\r\n\ associate\ an\ image\ with\ this\ room\r\n\ @param\ filename\ a\ String\ containing\ a\ file.\r\n\ The\ file\ <b>must</b>\ reside\ in\ the\ media\ directory,\ \r\n\ and\ must\ be\ in\ a\ format\ viewable\ in\ the\ Java\ AWT.\r\n\ Readable\ formats\ include\:\ \r\n\ PNG,\ JPG\ (RGB\ color\ scheme\ only),\ GIF\r\n
comment16.params=
comment16.target=java.lang.String\ getAudio()
comment16.text=\r\n\ @return\ a\ String,\ which\ hopefully\ contains\ the\ file\ name\r\n\ of\ an\ audio\ file.\r\n
comment17.params=filename
comment17.target=void\ setAudio(java.lang.String)
comment17.text=\r\n\ associate\ an\ audio\ clip\ with\ this\ room\r\n\ @param\ filename\ a\ String\ containing\ a\ file.\r\n\ The\ file\ <b>must</b>\ reside\ in\ the\ media\ directory,\ \r\n\ and\ must\ be\ in\ a\ format\ palyable\ in\ the\ Java\ AWT.\r\n\ Readable\ formats\ include\:\ \r\n\ WAV,\ AU.\r\n
comment2.params=k
comment2.target=void\ lock(Item)
comment3.params=
comment3.target=boolean\ isLocked()
comment4.params=k
comment4.target=java.lang.String\ unlock(Item)
comment5.params=direction
comment5.target=Room\ getExit(java.lang.String)
comment6.params=it
comment6.target=Item\ getItem(java.lang.String)
comment7.params=it
comment7.target=Item\ removeItem(java.lang.String)
comment8.params=
comment8.target=java.lang.String\ getExitString()
comment9.params=
comment9.target=java.lang.String\ getItemString()
numComments=18
